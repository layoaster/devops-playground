apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "myapp.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "myapp.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  minReadySeconds: 15
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "myapp.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: {{ .Chart.Name }}
          env:
            - name: REDIS_HOSTNAME
              value: {{ .Values.redisHostname | quote }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          livenessProbe:
          # To make sure container is restarted if it fails
            httpGet:
              path: /healthz
              port: http
            periodSeconds: 60
            timeoutSeconds: 120
          readinessProbe:
          # To start serving requests when container is ready
            httpGet:
              path: /healthz
              port: http
            periodSeconds: 60
            timeoutSeconds: 120


# apiVersion: apps/v1beta2
# kind: Deployment
# metadata:
#   name: {{ include "myapp.fullname" . }}
#   labels:
#     app.kubernetes.io/name: {{ include "myapp.name" . }}
#     helm.sh/chart: {{ include "myapp.chart" . }}
#     app.kubernetes.io/instance: {{ .Release.Name }}
#     app.kubernetes.io/managed-by: {{ .Release.Service }}
# spec:
#   replicas: {{ .Values.replicaCount }}
#   selector:
#     matchLabels:
#       app.kubernetes.io/name: {{ include "myapp.name" . }}
#       app.kubernetes.io/instance: {{ .Release.Name }}
#   template:
#     metadata:
#       labels:
#         app.kubernetes.io/name: {{ include "myapp.name" . }}
#         app.kubernetes.io/instance: {{ .Release.Name }}
#     spec:
#       containers:
#         - name: {{ .Chart.Name }}
#           image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
#           imagePullPolicy: {{ .Values.image.pullPolicy }}
#           ports:
#             - name: http
#               containerPort: 80
#               protocol: TCP
#           livenessProbe:
#             httpGet:
#               path: /
#               port: http
#           readinessProbe:
#             httpGet:
#               path: /
#               port: http
#           resources:
# {{ toYaml .Values.resources | indent 12 }}
#     {{- with .Values.nodeSelector }}
#       nodeSelector:
# {{ toYaml . | indent 8 }}
#     {{- end }}
#     {{- with .Values.affinity }}
#       affinity:
# {{ toYaml . | indent 8 }}
#     {{- end }}
#     {{- with .Values.tolerations }}
#       tolerations:
# {{ toYaml . | indent 8 }}
#     {{- end }}
